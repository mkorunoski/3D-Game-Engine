package com.base.engine;

public class Camera
{
	public static final Vector3f yAxis = new Vector3f(0, 1, 0);
	
	private Vector3f position;
	private Vector3f forward;
	private Vector3f up; 
	
	public Camera()
	{
		this(new Vector3f(0, 0, 0), new Vector3f(0, 0, 1), new Vector3f(0, 1, 0));
	}
	
	public Camera(Vector3f position, Vector3f forward, Vector3f up)
	{
		this.position = position;
		this.forward = forward;
		this.up = up;
		
		up.normalize();
		forward.normalize();
	}
	
	public void input()
	{
		float movAmt = (float)(10 * Time.getDelta());
		float rotAmt = (float)(100 * Time.getDelta());
		
		if(Input.getKey(Input.KEY_W))
		{
			move(getForward(), movAmt);
		}
		if(Input.getKey(Input.KEY_S))
		{
			move(getForward(), -movAmt);
		}
		if(Input.getKey(Input.KEY_A))
		{
			move(getLeft(), movAmt);
		}
		if(Input.getKey(Input.KEY_D))
		{
			move(getRight(), movAmt);
		}
		
		if(Input.getKey(Input.KEY_UP))
		{
			rotateX(-rotAmt);
		}
		if(Input.getKey(Input.KEY_DOWN))
		{
			rotateX(rotAmt);
		}
		if(Input.getKey(Input.KEY_LEFT))
		{
			rotateY(-rotAmt);
		}
		if(Input.getKey(Input.KEY_RIGHT))
		{
			rotateY(rotAmt);
		}
	}
	
	public void move(Vector3f direction, float amount)
	{
		position = position.add(direction.mul(amount));		
	}
	
	public void rotateY(float angle)
	{
		Vector3f Haxis = yAxis.cross(forward);
		Haxis.normalize();
		
		forward.rotate(angle, yAxis);
		forward.normalize();
		
		up = forward.cross(Haxis);
		up.normalize();		
	}
	
	public void rotateX(float angle)
	{
		Vector3f Haxis = yAxis.cross(forward);
		Haxis.normalize();
		
		forward.rotate(angle, Haxis);
		forward.normalize();
		
		up = forward.cross(Haxis);
		up.normalize();
	}
	
	public Vector3f getLeft()
	{
		Vector3f left = forward.cross(up);
		left.normalize();
		return left;
	}
	
	public Vector3f getRight()
	{
		Vector3f right = up.cross(forward);
		right.normalize();
		return right;
	}

	public Vector3f getPosition()
	{
		return position;
	}

	public void setPosition(Vector3f position)
	{
		this.position = position;
	}

	public Vector3f getForward()
	{
		return forward;
	}

	public void setForward(Vector3f forward)
	{
		this.forward = forward;
	}

	public Vector3f getUp()
	{
		return up;
	}

	public void setUp(Vector3f up)
	{
		this.up = up;
	}

}
